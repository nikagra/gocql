name: Setup environment
description: Setup environment for integration tests execution
inputs:
  ccm_version:
    description: 'CCM version'
    required: true
  docker_compose_version:
    description: 'Docker compose version'
    required: true
  java_version:
    description: 'java version'
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up cache for SDKMAN
      uses: actions/cache@v4
      with:
        path: ~/.sdkman
        key: ${{ runner.os }}-sdkman

    - name: Set up cache for PIP
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    #    - name: Install Java
    #      shell: bash
    #      run: |
    #        echo "Installing SDKMAN..."
    #        curl -s "https://get.sdkman.io" | bash
    #        source "$HOME/.sdkman/bin/sdkman-init.sh"
    #        echo "sdkman_auto_answer=true" >> ~/.sdkman/etc/config
    #
    #        echo "Installing Java versions..."
    #        sdk install java 11.0.24-zulu
    #        sdk install java 17.0.12-zulu
    #
    #        sdk default java 11.0.24-zulu
    #        sdk use java 11.0.24-zulu
    #
    #         echo "JAVA11_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
    #         echo "JAVA17_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV
    #         echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
    #         echo "PATH=$PATH" >> $GITHUB_ENV
    - name: Install Java
      uses: actions/setup-java@v5
      with:
        java-version: ${{ inputs.java_version }}
        distribution: 'temurin'

    - name: Install CCM
      shell: bash
      run: |
        echo "Creating Python virtual environment..."
        VENV_DIR="$HOME/venv"
        python3 -m venv $VENV_DIR
        source $VENV_DIR/bin/activate
        pip install setuptools==77.0.3
        pip install --upgrade pip

        echo "Installing CCM..."
        pip install "git+https://github.com/scylladb/scylla-ccm.git@${{ inputs.ccm_version }}"

    - name: Install Docker compose
      shell: bash
      run: sudo curl -L "https://github.com/docker/compose/releases/download/${{ inputs.docker_compose_version }}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
